name: Python CI/CD

on:
  push:
    branches: [ main, feature ]
  pull_request:
    branches: [ main ]

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    services:
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: devtalk
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash

      - name: Install Redis CLI tools
        run: sudo apt-get update && sudo apt-get install -y redis-tools

      - name: Install MySQL client
        run: sudo apt-get install -y mysql-client

      - name: Wait for Redis
        run: |
          for i in {1..10}; do
            if redis-cli -h 127.0.0.1 ping | grep -q "PONG"; then
              echo "Redis ready!"
              break
            fi
            sleep 5
          done

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 -u mysql -pmysql 2>/dev/null; then
              echo "MySQL ready!"
              break
            fi
            sleep 5
          done

      - name: Initialize MySQL
        run: |
          mysql -h 127.0.0.1 -u mysql -pmysql devtalk < migrations/models.sql

      - name: Run tests
        run: |
          pytest -v tests/
        env:
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_DATABASE: devtalk
        shell: bash

  security-check:
    name: Security check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for vulnerabilities
        run: |
          pip install bandit
          bandit -r . -f html -o security-report.html
          
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.html