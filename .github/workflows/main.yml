name: Python CI/CD

on:
  push:
    branches: [main, feature]
  pull_request:
    branches: [main]

env:
  # MySQL
  MYSQL_HOST: 127.0.0.1
  MYSQL_PORT: 3306
  MYSQL_USER: simon
  MYSQL_DATABASE: dev_talk

  # Redis
  REDIS_HOST: 127.0.0.1
  REDIS_PORT: 6379
  REDIS_DB: 0

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

    services:
      redis:
        image: redis:7.0
        ports: [6379:6379]
        options: >-
          --health-cmd "redis-cli ping || exit 1"

      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        ports: [3306:3306]
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u $MYSQL_USER -p$MYSQL_PASSWORD"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system tools
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-tools mysql-client
        shell: bash

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash

      - name: Wait for Redis
        run: |
          for i in {1..10}; do
            if redis-cli -h $REDIS_HOST ping | grep -q "PONG"; then
              echo "Redis ready!"
              break
            fi
            sleep 5
          done
          redis-cli -h $REDIS_HOST ping || exit 1

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h $MYSQL_HOST -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" 2>/dev/null; then
              echo "MySQL ready!"
              break
            fi
            sleep 5
          done
          mysqladmin ping -h $MYSQL_HOST -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" || exit 1

      - name: Initialize MySQL
        run: |
          mysql -h $MYSQL_HOST -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" $MYSQL_DATABASE < migrations/models.sql

      - name: Run tests
        run: pytest -v tests/

  security-check:
    name: Security check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security scan
        run: |
          pip install bandit safety
          bandit -r . --severity-level high --confidence-level high
          safety check --full-report
          bandit -r . -f html -o security-report.html

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.html